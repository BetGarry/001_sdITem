import { vec3 } from 'gl-matrix';
import { HttpResponse } from '../http-client/HttpResponse';
export declare class Converter {
    private readonly _httpClient;
    private static _instance;
    static get instance(): Converter;
    processSVG(blob: Blob): Promise<HTMLImageElement>;
    responseToImage(response: HttpResponse<ArrayBuffer>): Promise<HTMLImageElement>;
    toAlpha(color: any): number;
    toColorArray(color: any): number[];
    /**
     * @param color
     * @param defColor
     */
    toHex8Color(color: any, defColorString?: string): string;
    /**
     * This color converter is mostly left 'as-is' from viewer v2.
     * I didn't want to break something that works.
     *
     * @param color
     * @param defColor
     */
    toHexColor(color: any, defColorString?: string): string;
    toThreeJsColorInput(color: any): string;
    toVec3(point: any): vec3;
    private tinyColorToString;
}
//# sourceMappingURL=Converter.d.ts.map