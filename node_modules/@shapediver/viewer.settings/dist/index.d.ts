import { IGlobalSettings } from "./interfaces/IGlobalSettings";
import { ISettings as ISettingsV1 } from "./versions/v1/ISettings";
import { Defaults as DefaultsV1 } from "./versions/v1/Defaults";
import { ISettings as ISettingsV2 } from "./versions/v2/ISettings";
import { Defaults as DefaultsV2 } from "./versions/v2/Defaults";
import { ISettings as ISettingsV3 } from "./versions/v3/ISettings";
import { Defaults as DefaultsV3 } from "./versions/v3/Defaults";
import { ICameraSettings as ICameraSettingsV3, IOrbitControlsSettings as IOrbitControlsSettingsV3, IOrthographicCameraSettings as IOrthographicCameraSettingsV3, IOrthographicControlsSettings as IOrthographicControlsSettingsV3, IPerspectiveCameraSettings as IPerspectiveCameraSettingsV3 } from "./versions/v3/ICameraSettings";
import { IAmbientLightProperties as IAmbientLightPropertiesV3, IDirectionalLightProperties as IDirectionalLightPropertiesV3, IHemisphereLightProperties as IHemisphereLightPropertiesV3, ILightSceneSettings as ILightSceneSettingsV3, IPointLightProperties as IPointLightPropertiesV3, ISpotLightProperties as ISpotLightPropertiesV3 } from "./versions/v3/ILightSceneSettings";
import { ISettings as ISettingsV3_1 } from "./versions/v3_1/ISettings";
import { Defaults as DefaultsV3_1 } from "./versions/v3_1/Defaults";
import { ICameraSettings as ICameraSettingsV3_1, IOrbitControlsSettings as IOrbitControlsSettingsV3_1, IOrthographicCameraSettings as IOrthographicCameraSettingsV3_1, IOrthographicControlsSettings as IOrthographicControlsSettingsV3_1, IPerspectiveCameraSettings as IPerspectiveCameraSettingsV3_1 } from "./versions/v3/ICameraSettings";
import { IAmbientLightProperties as IAmbientLightPropertiesV3_1, IDirectionalLightProperties as IDirectionalLightPropertiesV3_1, IHemisphereLightProperties as IHemisphereLightPropertiesV3_1, ILightSceneSettings as ILightSceneSettingsV3_1, IPointLightProperties as IPointLightPropertiesV3_1, ISpotLightProperties as ISpotLightPropertiesV3_1 } from "./versions/v3/ILightSceneSettings";
import { ISettings as ISettingsV3_2 } from "./versions/v3_2/ISettings";
import { Defaults as DefaultsV3_2 } from "./versions/v3_2/Defaults";
import { ICameraSettings as ICameraSettingsV3_2, IOrbitControlsSettings as IOrbitControlsSettingsV3_2, IOrthographicCameraSettings as IOrthographicCameraSettingsV3_2, IOrthographicControlsSettings as IOrthographicControlsSettingsV3_2, IPerspectiveCameraSettings as IPerspectiveCameraSettingsV3_2 } from "./versions/v3/ICameraSettings";
import { IAmbientLightProperties as IAmbientLightPropertiesV3_2, IDirectionalLightProperties as IDirectionalLightPropertiesV3_2, IHemisphereLightProperties as IHemisphereLightPropertiesV3_2, ILightSceneSettings as ILightSceneSettingsV3_2, IPointLightProperties as IPointLightPropertiesV3_2, ISpotLightProperties as ISpotLightPropertiesV3_2 } from "./versions/v3/ILightSceneSettings";
export { ISettingsV1, DefaultsV1 };
export { ISettingsV2, DefaultsV2 };
export { ISettingsV3, DefaultsV3, ICameraSettingsV3, IOrthographicCameraSettingsV3, IPerspectiveCameraSettingsV3, IOrbitControlsSettingsV3, IOrthographicControlsSettingsV3, ILightSceneSettingsV3, IAmbientLightPropertiesV3, IDirectionalLightPropertiesV3, IHemisphereLightPropertiesV3, IPointLightPropertiesV3, ISpotLightPropertiesV3 };
export { ISettingsV3_1, DefaultsV3_1, ICameraSettingsV3_1, IOrthographicCameraSettingsV3_1, IPerspectiveCameraSettingsV3_1, IOrbitControlsSettingsV3_1, IOrthographicControlsSettingsV3_1, ILightSceneSettingsV3_1, IAmbientLightPropertiesV3_1, IDirectionalLightPropertiesV3_1, IHemisphereLightPropertiesV3_1, IPointLightPropertiesV3_1, ISpotLightPropertiesV3_1 };
export { ISettingsV3_2, DefaultsV3_2, ICameraSettingsV3_2, IOrthographicCameraSettingsV3_2, IPerspectiveCameraSettingsV3_2, IOrbitControlsSettingsV3_2, IOrthographicControlsSettingsV3_2, ILightSceneSettingsV3_2, IAmbientLightPropertiesV3_2, IDirectionalLightPropertiesV3_2, IHemisphereLightPropertiesV3_2, IPointLightPropertiesV3_2, ISpotLightPropertiesV3_2 };
export declare type versions = '1.0' | '2.0' | '3.0' | '3.1' | '3.2';
export declare const convert: (settings: any, targetVersion: versions) => IGlobalSettings;
export declare const validate: (settings: any, targetVersion?: versions | undefined) => void;
export declare const evaluateSettingsVersion: (viewerVersion?: string | undefined) => versions;
//# sourceMappingURL=index.d.ts.map