import { ShapeDiverCommonsGroup } from "../commons/SdCommonsGroup";
/**
 * @swagger {components.schemas} RequestCustomization {
     "description": "Body of a customization request.<br/>A directory of parameter-IDs and basic/s-type parameter values.",
     "type": "object",
     "additionalProperties": {
       "oneOf": [
         { "$ref": "#/components/schemas/RequestParameterBasic" },
         { "$ref": "#/components/schemas/RequestParameterSType" }
       ]
     }
   }
 * @example
 * {
 *   <parameter id> : <basic parameter>,
 *   <parameter id> : <s-type parameter>
 * }
 */
/** Body of a customization request.<br/>A directory of parameter-IDs and basic/s-type parameter values. */
export type ShapeDiverRequestCustomization = {
    [parameterId: string]: ShapeDiverRequestParameterBasic | ShapeDiverRequestParameterSType;
};
/**
 * @swagger {components.schemas} RequestParameterBasic {
     "description": "Definition of a basic ShapeDiver parameter.",
     "oneOf": [
       { "type": "string" },
       { "type": "number" },
       { "type": "boolean" }
     ]
   }
 * @example
 * "0014bb77-e57c-4be3-92eb-24b59c41ee43" // File
 * "0x11223344" // Color
 * "0001-01-01T23:55:00" // Time
 */
/** Definition of a basic ShapeDiver parameter. */
export type ShapeDiverRequestParameterBasic = string | number | boolean;
/**
 * @swagger {components.schemas} RequestParameterSType {
     "description": "Definition of the value to use for s-type parameters.",
     "type": "object"
   }
 */
/** Definition of the value to use for s-type parameters. */
export interface ShapeDiverRequestParameterSType {
    /**
     * @swagger {components.schemas.RequestParameterSType.properties} value {
         "description": "Optional embedded value. If this is set the asset is ignored.",
         "type": "string"
       }
     */
    /** Optional embedded value. If this is set the asset is ignored. */
    value?: string;
    /**
     * @swagger {components.schemas.RequestParameterSType.properties} asset {
         "description": "Reference to the asset to be used.",
         "type": "object"
       }
     */
    /** Reference to the asset to be used. */
    asset?: {
        /**
         * @swagger {components.schemas.RequestParameterSType.properties.asset.properties} id {
              "description": "String ID of the asset.",
              "type": "string"
            }
         * @swagger {components.schemas.RequestParameterSType.properties.asset} required [ "id" ]
         */
        /** String ID of the asset. */
        id: string;
        /**
         * @swagger {components.schemas.RequestParameterSType.properties.asset.properties} chunk {
             "description": "Describing which chunk to use, instead of the default one, which would get chosen based on parameter ID and name.",
             "type": "object"
           }
         */
        /** Describing which chunk to use, instead of the default one, which would get chosen based on parameter ID and name. */
        chunk?: {
            /**
             * @swagger {components.schemas.RequestParameterSType.properties.asset.properties.chunk.properties} id {
                 "description": "ID of the chunk to be used.",
                 "type": "string"
               }
             */
            /** ID of the chunk to be used. */
            id?: string;
            /**
             * @swagger {components.schemas.RequestParameterSType.properties.asset.properties.chunk.properties} name {
                 "description": "Name attribute of the chunk to be used.",
                 "type": "string"
               }
             */
            /** Name attribute of the chunk to be used. */
            name?: string;
        };
    };
}
/**
 * @swagger {components.schemas} RequestExport {
     "description": "Body of an export request.",
     "type": "object"
   }
 */
/** Body of an export request. */
export interface ShapeDiverRequestExport {
    /**
     * @swagger {components.schemas.RequestExport.properties} parameters {
         "$ref": "#/components/schemas/RequestCache"
       }
     * @swagger {components.schemas.RequestExport} required [ "parameters" ]
     */
    /** */
    parameters: ShapeDiverRequestCustomization;
    /**
     * @swagger {components.schemas.RequestExport.properties} exports {
         "type": "object",
         "properties": {
           "id": {
             "type": "string"
           }
         }
       }
     * @swagger {components.schemas.RequestExport} required [ "exports" ]
     */
    /** */
    exports: {
        id: string;
    };
    /**
     * @swagger {components.schemas.RequestExport.properties} max_wait_time {
         "description": "Maximum amount of milliseconds to wait for completion of export request before responding.",
         "type": "number"
       }
     * @swagger {components.schemas.RequestExport} required [ "max_wait_time" ]
     */
    /** Maximum amount of milliseconds to wait for completion of export request before responding. */
    max_wait_time?: number;
}
/**
 * @swagger {components.schemas} RequestCache {
     "description": "Body of an export or output cache request.<br/>A directory of export-/output-IDs and version-IDs.",
     "type": "object",
     "additionalProperties": {
       "type": "string"
     },
     "example": {
       "96ce38f8-e197-416a-b78b-18d8376f5903": "62b3e13f-7b78-4a59-86f9-4a51f83feb21"
     }
   }
 */
/** Body of an export or output cache request.<br/>A directory of export-/output-IDs and version-IDs. */
export type ShapeDiverRequestCache = {
    [key: string]: string;
};
/**
 * @swagger {components.schemas} RequestExportDefinition {
     "description": "Definition of a exports.<br/>A directory of export-IDs and export-definitions.",
     "type": "object",
     "additionalProperties": {
        "$ref": "#/components/schemas/RequestExportDefinitionPart"
     }
   }
 */
/** Definition of a exports.<br/>A directory of export-IDs and export-definitions. */
export type ShapeDiverRequestExportDefinition = {
    [exportId: string]: ShapeDiverRequestExportDefinitionPart;
};
/**
 * @swagger {components.schemas} RequestExportDefinitionPart {
     "description": "Data for a single export definition.",
     "type": "object"
   }
 */
/** Data for a single export definition. */
export type ShapeDiverRequestExportDefinitionPart = {
    /**
     * @swagger {components.schemas.RequestExportDefinitionPart.properties} displayname {
         "description": "Parameter name to display instead of <i>name</i>.",
         "type": "string"
       }
     */
    /** Parameter name to display instead of <i>name</i>. */
    displayname?: string;
    /**
     * @swagger {components.schemas.RequestExportDefinitionPart.properties} group {
         "anyOf": [
           { "$ref": "#/components/schemas/RequestExportDefinitionGroup" },
           {
             "description": "Set to <code>null</code> to remove the export from the currently assigned group.",
             "type": "null"
           }
         ]
       }
     */
    /**
     * Group of an export.
     * Set to `null` to remove the export from the currently assigned group.
     */
    group?: ShapeDiverRequestExportDefinitionGroup | null;
    /**
     * @swagger {components.schemas.RequestExportDefinitionPart.properties} hidden {
         "description": "Controls whether the export should be hidden in the UI.",
         "type": "boolean"
       }
     */
    /** Controls whether the export should be hidden in the UI. */
    hidden?: boolean;
    /**
     * @swagger {components.schemas.RequestExportDefinitionPart.properties} order {
         "description": "Ordering of the export in client applications.",
         "type": "number"
       }
     */
    /** Ordering of the export in client applications. */
    order?: number;
    /**
     * @swagger {components.schemas.RequestExportDefinitionPart.properties} tooltip {
         "description": "Description that is shown as a tooltip in the clients.",
         "type": "string"
       }
     */
    /** Description that is shown as a tooltip in the clients. */
    tooltip?: string;
};
/**
 * @swagger {components.schemas} RequestExportDefinitionGroup {
     "allOf": [
       { "$ref": "#/components/schemas/CommonsGroup" },
       {
         "description": "Group information of an export definition.",
         "type": "object"
       }
     ]
   }
 */
/** Group information of an export definition. */
export type ShapeDiverRequestExportDefinitionGroup = ShapeDiverCommonsGroup;
/**
 * @swagger {components.schemas} RequestOutputDefinition {
     "description": "Definition of outputs.<br/>A directory of output-IDs and output-definitions.",
     "type": "object",
     "additionalProperties": {
        "$ref": "#/components/schemas/RequestOutputDefinitionPart"
     }
   }
 */
/** Definition of outputs.<br/>A directory of output-IDs and output-definitions. */
export type ShapeDiverRequestOutputDefinition = {
    [outputId: string]: ShapeDiverRequestOutputDefinitionPart;
};
/**
 * @swagger {components.schemas} RequestOutputDefinitionPart {
     "description": "Data for a single output definition.",
     "type": "object"
   }
 */
/** Data for a single output definition.*/
export type ShapeDiverRequestOutputDefinitionPart = {
    /**
     * @swagger {components.schemas.RequestOutputDefinitionPart.properties} displayname {
           "description": "Parameter name to display instead of <i>name</i>.",
           "type": "string"
         }
     */
    /** Parameter name to display instead of <i>name</i>. */
    displayname?: string;
    /**
     * @swagger {components.schemas.RequestOutputDefinitionPart.properties} group {
         "anyOf": [
           { "$ref": "#/components/schemas/RequestOutputDefinitionGroup" },
           {
             "description": "Set to <code>null</code> to remove the output from the currently assigned group.",
             "type": "null"
           }
         ]
       }
     */
    /**
     * Group of an output.
     * Set to `null` to remove the output from the currently assigned group.
     */
    group?: ShapeDiverRequestOutputDefinitionGroup | null;
    /**
     * @swagger {components.schemas.RequestOutputDefinitionPart.properties} hidden {
           "description": "Controls whether the output should be hidden in the UI.",
           "type": "boolean"
         }
     */
    /** Controls whether the output should be hidden in the UI. */
    hidden?: boolean;
    /**
     * @swagger {components.schemas.RequestOutputDefinitionPart.properties} order {
           "description": "Ordering of the output in client applications.",
           "type": "number"
         }
     */
    /** Ordering of the output in client applications. */
    order?: number;
    /**
     * @swagger {components.schemas.RequestOutputDefinitionPart.properties} tooltip {
         "description": "Description that is shown as a tooltip in the clients.",
         "type": "string"
       }
     */
    /** Description that is shown as a tooltip in the clients. */
    tooltip?: string;
};
/**
 * @swagger {components.schemas} RequestOutputDefinitionGroup {
     "allOf": [
       { "$ref": "#/components/schemas/CommonsGroup" },
       {
         "description": "Group information of an output definition.",
         "type": "object"
       }
     ]
   }
 */
/** Group information of an output definition. */
export type ShapeDiverRequestOutputDefinitionGroup = ShapeDiverCommonsGroup;
//# sourceMappingURL=SdRequestDtoExportOutput.d.ts.map