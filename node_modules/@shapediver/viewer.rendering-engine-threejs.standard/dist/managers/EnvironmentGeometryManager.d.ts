import * as THREE from 'three';
import { Color } from '@shapediver/viewer.shared.types';
import { IBox } from '@shapediver/viewer.shared.math';
import { RenderingEngine } from '..';
import { IManager } from '@shapediver/viewer.rendering-engine.rendering-engine';
export declare class EnvironmentGeometryManager implements IManager {
    private readonly _renderingEngine;
    private readonly _converter;
    private readonly _eventEngine;
    private _environmentGeometryObject;
    private _grid;
    private _gridObject;
    private _groundPlane;
    private _groundPlaneShadow;
    private _groundPlaneObject;
    private _groundPlaneShadowObject;
    private _groundPlaneColor;
    private _groundPlaneShadowColor;
    private _gridColor;
    private _initialized;
    constructor(_renderingEngine: RenderingEngine);
    get gridColor(): Color;
    set gridColor(value: Color);
    get groundPlaneColor(): Color;
    set groundPlaneColor(value: Color);
    get groundPlaneShadowColor(): Color;
    set groundPlaneShadowColor(value: Color);
    get grid(): THREE.GridHelper;
    get groundPlane(): THREE.Mesh;
    get groundPlaneShadow(): THREE.Mesh;
    assignGroundPlaneColor(color: Color): void;
    assignGroundPlaneShadowColor(color: Color): void;
    /**
     * Creates the grid extents and divisios with the specified scene extents.
     *
     * https://shapediver.atlassian.net/browse/SS-2961 evaluate this magic.
     */
    private evaluateGridMeasurements;
    changeSceneExtents(bb: IBox): void;
    init(): void;
    updateEnvironmentGeometryPosition(): void;
}
//# sourceMappingURL=EnvironmentGeometryManager.d.ts.map